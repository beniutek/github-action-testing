---

  name: CI

  on: [push]

  jobs:
    static:
      name: Continious Innovation
      runs-on: ubuntu-20.04
      env:
        RAILS_ENV: test
      steps:
        - name: Checkout
          uses: actions/checkout@master

        - name: Set up NodeJS
          uses: actions/setup-node@v3
          with:
            node-version-file: '.nvmrc'
            cache: yarn
          env:
            GITHUB_NPM_TOKEN: ${{ secrets.PTA_GITHUB_TOKEN }}
            GITHUB_TOKEN: ${{ secrets.PTA_GITHUB_TOKEN }}

        - name: Install JS dependencies
          run: yarn
          env:
            GITHUB_NPM_TOKEN: ${{ secrets.PTA_GITHUB_TOKEN }}
            GITHUB_TOKEN: ${{ secrets.PTA_GITHUB_TOKEN }}

        - name: Dry-Release
          id: dry-semantic-release
          env:
            GIT_AUTHOR_NAME: '@test-action-bot'
            GITHUB_TOKEN: ${{ secrets.PTA_GITHUB_TOKEN }}
            GITHUB_NPM_TOKEN: ${{ secrets.PTA_GITHUB_TOKEN }}
          run: |
            echo "Running dry-release for branch ${{ github.ref_name }}"

            RELEASE_VERSION=$(yarn semantic-release --dry-run --branches ${{ github.ref_name }} | awk -F'::' '/::DES_VERSION::/{print $3}')

            echo "Release version if this branch is merged: $RELEASE_VERSION"

        - name: Release
          id: semantic-release
          env:
            GIT_AUTHOR_NAME: '@dreams-enterprise-bot'
            GITHUB_TOKEN: ${{ secrets.PTA_GITHUB_TOKEN }}
            GITHUB_NPM_TOKEN: ${{ secrets.PTA_GITHUB_TOKEN }}
          run: |
            RELEASE_VERSION=$(yarn semantic-release | awk -F'::' '/::DES_VERSION::/{print $3}')

            echo "New semantic-release version: $RELEASE_VERSION"

            if [ -z "$RELEASE_VERSION" ]; then
              echo "No new release version generated."
              echo "RELEASE_VERSION=none" >> $GITHUB_OUTPUT
            else
              echo "New semantic-release version: $RELEASE_VERSION"
              echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_OUTPUT
            fi

