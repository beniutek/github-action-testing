---

  name: CI

  on: [push]

  permissions:
    contents: read

  jobs:
    static:
      name: Continious Innovation
      runs-on: ubuntu-20.04
      permissions:
        contents: write # to be able to publish a GitHub release
        issues: write # to be able to comment on released issues
        pull-requests: write # to be able to comment on released pull requests
        id-token: write # to enable use of OIDC for npm provenance
      steps:
        - name: Checkout
          uses: actions/checkout@v3
          with:
            token: ${{ secrets.PTA_GITHUB_TOKEN }}

        - name: Set up NodeJS
          uses: actions/setup-node@v3
          with:
            node-version-file: '.nvmrc'
            cache: yarn
          env:
            GITHUB_NPM_TOKEN: ${{ secrets.PTA_GITHUB_TOKEN }}
            GITHUB_TOKEN: ${{ secrets.PTA_GITHUB_TOKEN }}
            GH_TOKEN: ${{ secrets.PTA_GITHUB_TOKEN }}

        - name: Install JS dependencies
          run: yarn
          env:
            GITHUB_NPM_TOKEN: ${{ secrets.PTA_GITHUB_TOKEN }}
            GITHUB_TOKEN: ${{ secrets.PTA_GITHUB_TOKEN }}
            GH_TOKEN: ${{ secrets.PTA_GITHUB_TOKEN }}

        - name: Release
          id: semantic-release
          env:
            GIT_AUTHOR_NAME: '@test-action-bot'
            GITHUB_TOKEN: ${{ secrets.PTA_GITHUB_TOKEN }}
            GH_TOKEN: ${{ secrets.PTA_GITHUB_TOKEN }}
            GITHUB_NPM_TOKEN: ${{ secrets.PTA_GITHUB_TOKEN }}
          run: |
            RELEASE_VERSION=$(yarn semantic-release | awk -F'::' '/::VERSION::/{print $3}')

            echo "New semantic-release version: $RELEASE_VERSION"

            if [ -z "$RELEASE_VERSION" ]; then
              echo "No new release version generated."
              echo "RELEASE_VERSION=none" >> $GITHUB_OUTPUT
            else
              echo "New semantic-release version: $RELEASE_VERSION"
              echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_OUTPUT
            fi

        - name: Checkout External Changelog Repository
          uses: actions/checkout@v3
          with:
            repository: 'beniutek/test-changelog-stuff'
            token: ${{ secrets.PTA_GITHUB_TOKEN }} # need to add token to access the this repo
            path: 'changelog-stuff'

        - name: Copy Changelog from Changelog Repo
          run: cp changelog-stuff/changelog-folder/CHANGELOG.md .

        - name: Commit Updated Changelog to Changelog Repo
          run: |
            cd changelog-stuff/changelog-folder
            git config user.name ${{ secrets.GIT_USER }}
            git config user.email ${{ secrets.GIT_EMAIL }}
            git add CHANGELOG.md
            git diff --staged --quiet || git commit -m "chore(changelog): update changelog file"
            git push origin main
